@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Configuration

@{
    Layout = "~/Views/Shared/_Root.cshtml";

    //current category ID
    int currentCategoryId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
    }

    //current manufacturer ID
    int currentManufacturerId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
    {
        currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
    }

    //current product ID
    int currentProductId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
    }

    var currentStoreId = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.Id;

    var isOneColumn = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("urbanthemesettings.iscategorypageonecolumn", false, currentStoreId, true);
    var categoryNavigationEnabled = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("urbanthemesettings.isdefaultcategorynavigationenabled", false, currentStoreId, true);
    var manufacturerNavigationEnabled = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("urbanthemesettings.isdefaultmanufacturernavigationenabled", false, currentStoreId, true);
    var vendorNavigationEnabled = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("urbanthemesettings.isdefaultvendornavigationenabled", false, currentStoreId, true);

    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("customer", StringComparison.InvariantCultureIgnoreCase) ||
        Url.RequestContext.RouteData.Values["controller"].ToString().Equals("order", StringComparison.InvariantCultureIgnoreCase) ||
        Url.RequestContext.RouteData.Values["controller"].ToString().Equals("blog", StringComparison.InvariantCultureIgnoreCase) ||
         (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("backinstocksubscription", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("customersubscriptions", StringComparison.InvariantCultureIgnoreCase)) ||
        (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("producttagsall", StringComparison.InvariantCultureIgnoreCase)) ||
        Url.RequestContext.RouteData.Values["controller"].ToString().Equals("helpdesk", StringComparison.InvariantCultureIgnoreCase))
    {
        isOneColumn = false;
    }
}

@if (IsSectionDefined("CategoryTop"))
{
    @RenderSection("CategoryTop")
}

@if (isOneColumn)
{
    <div class="center-side-wrapper onecolumn">
        <div class="center-1">
            <div class="center-grid">
                @Html.Widget("main_column_before")
                
                @if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) && 
                    !Url.RequestContext.RouteData.Values["action"].ToString().Equals("search", StringComparison.InvariantCultureIgnoreCase))
                {
                    @Html.Widget("urban_theme_ajax_filters")
                }

                @RenderBody()

                <div class="onecolumn-category-block-wrapper">
                    @if (categoryNavigationEnabled)
                    {
                        @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })
                    }

                    @if (manufacturerNavigationEnabled)
                    {
                        @Html.Action("ManufacturerNavigation", "Catalog", new { currentManufacturerId = currentManufacturerId })
                    }

                    @if (vendorNavigationEnabled)
                    {
                        @Html.Action("VendorNavigation", "Catalog")
                    }
                </div>

                @Html.Action("PopularProductTags", "Catalog")

                @Html.Widget("main_column_after")
            </div>
        </div>
    </div>
}
else
{
    <div class="center-side-wrapper twocolumns">
        <div class="center-2">
            @Html.Widget("main_column_before")
            @RenderBody()
            @Html.Widget("main_column_after")
        </div>
        <div class="side-2">
            @if (IsSectionDefined("left"))
            {
                @RenderSection("left")
            }
            else
            {
                @Html.Widget("left_side_column_before")
                @Html.Widget("urban_theme_ajax_filters")
                @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })
                @Html.Widget("left_side_column_after_category_navigation")
                @Html.Action("ManufacturerNavigation", "Catalog", new { currentManufacturerId = currentManufacturerId })
                @Html.Action("VendorNavigation", "Catalog")
                @Html.Action("RecentlyViewedProductsBlock", "Product", new { productThumbPictureSize = 130 })
                @Html.Action("PopularProductTags", "Catalog")
                @Html.Action("PollBlock", "Poll", new { systemKeyword = "LeftColumnPoll" })
                @Html.Widget("left_side_column_after")
            }
        </div>
    </div>
}